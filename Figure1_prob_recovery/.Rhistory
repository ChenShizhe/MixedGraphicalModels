P<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix P.csv",sep=""),header=F))
Phi<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix Phi.csv",sep=""),header=F))
for(iter in 1:M2){
set.seed(19+23*iter)
rs<-sampler.old(10000, B=B, P=P, Phi=Phi, seedmultiplier=(19+23*iter),
Gibbs.n=500,burnin=3000)
write.table(rs,file=paste("sample30", "N10000", iter, ".txt",sep=""))
}
M2<-10 # Number of datasets for each graph
for(iter in 1:M2){
set.seed(19+23*iter)
rs<-sampler.old(10000, B=B, P=P, Phi=Phi, seedmultiplier=(19+23*iter),
Gibbs.n=500,burnin=3000)
write.table(rs,file=paste("sample30", "N10000", iter, ".txt",sep=""))
}
source("../Sources/mixedgraphcodes.r")
source("../Sources/BIC.r")
### The first simulation: testing whether the theoretical result is correct.
B<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix B.csv",sep=""),header=F))
P<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix P.csv",sep=""),header=F))
Phi<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix Phi.csv",sep=""),header=F))
###
p<-dim(P)[1]
q<-dim(P)[2]
total<-50
lambdas<-exp(-seq(from= 2, to= -2, length.out=total))
M2<-10
samplesize<-seq(from=200, to=6000, by=200)
nsize<-length(samplesize)
### Number of replicates
truth<-huge(gr)
success.all<-replicate(4,matrix(0,total,M2))
all.rate<-replicate(4,matrix(0,total,nsize))
time.start<-proc.time()
for(size in 1:nsize){
count<-0
for(iter in 1:M2){
rs<-as.matrix(read.table(file=paste("./Data/sample30", "N10000",iter, ".txt",sep="" )))
rs<-rs[1:samplesize[size],]
if( is.same(rs[,p+(1:q) ])==T){ success.all[iter,]<-0
}else{
count<-count+1
sds<-as.numeric(apply(rs, 2, sd))
est_path<-neighbour.value(dat=rs,p=p,q=q,
clambda.g=lambdas,ratio=1, pf=T, pw=sds,cf=F)
for(j in 1: total){
est<-combine.type(est_path$N[,,j],p=p,q=q, cc="and",dd="and", neg=TRUE)
diag(est[[1]])<-1
diag(est[[4]])<-1
cc<-sum(sign(est[[1]])!=sign(gr[[1]]))==0
cd<-sum(sign(est[[2]])!=sign(gr[[2]]))==0
dc<-sum(sign(est[[3]])!=sign(gr[[2]]))==0
dd<-sum(sign(est[[4]])!=sign(gr[[3]]))==0
success.all[j, iter,1]<-cc
success.all[j, iter,2]<-cd
success.all[j, iter,3]<-dc
success.all[j, iter,4]<-dd
}
}
}
for(k in 1:4){
for(j in 1:total){
all.rate[j, size,k]<-mean(success.all[j,,k])*M2/count
}
}
}
write.table(all.rate[,,1], file=paste("./Estimates/60/","prob60cc.txt",sep=""))
write.table(all.rate[,,2], file=paste("./Estimates/60/","prob60cd.txt",sep=""))
write.table(all.rate[,,3], file=paste("./Estimates/60/","prob60dc.txt",sep=""))
write.table(all.rate[,,4], file=paste("./Estimates/60/","prob60dd.txt",sep=""))
est<-combine_type(est_path$N[,,j],p=p,q=q, cc="and",dd="and", neg=TRUE)
source("../Sources/mixedgraphcodes.r")
source("../Sources/BIC.r")
total<-50
lambdas<-exp(-seq(from= 2, to= -2, length.out=total))
M2<-10
samplesize<-seq(from=200, to=6000, by=200)
nsize<-length(samplesize)
### Number of replicates
truth<-huge(gr)
success.all<-replicate(4,matrix(0,total,M2))
all.rate<-replicate(4,matrix(0,total,nsize))
time.start<-proc.time()
for(size in 1:nsize){
count<-0
for(iter in 1:M2){
rs<-as.matrix(read.table(file=paste("./Data/sample30", "N10000",iter, ".txt",sep="" )))
rs<-rs[1:samplesize[size],]
if( is.same(rs[,p+(1:q) ])==T){ success.all[iter,]<-0
}else{
count<-count+1
sds<-as.numeric(apply(rs, 2, sd))
est_path<-neighbour.value(dat=rs,p=p,q=q,
clambda.g=lambdas,ratio=1, pf=T, pw=sds,cf=F)
for(j in 1: total){
est<-combine_type(est_path$N[,,j],p=p,q=q, cc="and",dd="and", neg=TRUE)
diag(est[[1]])<-1
diag(est[[4]])<-1
cc<-sum(sign(est[[1]])!=sign(gr[[1]]))==0
cd<-sum(sign(est[[2]])!=sign(gr[[2]]))==0
dc<-sum(sign(est[[3]])!=sign(gr[[2]]))==0
dd<-sum(sign(est[[4]])!=sign(gr[[3]]))==0
success.all[j, iter,1]<-cc
success.all[j, iter,2]<-cd
success.all[j, iter,3]<-dc
success.all[j, iter,4]<-dd
}
}
}
for(k in 1:4){
for(j in 1:total){
all.rate[j, size,k]<-mean(success.all[j,,k])*M2/count
}
}
}
write.table(all.rate[,,1], file=paste("./Estimates/60/","prob60cc.txt",sep=""))
write.table(all.rate[,,2], file=paste("./Estimates/60/","prob60cd.txt",sep=""))
write.table(all.rate[,,3], file=paste("./Estimates/60/","prob60dc.txt",sep=""))
write.table(all.rate[,,4], file=paste("./Estimates/60/","prob60dd.txt",sep=""))
for(j in 1: total){
est<-combine.type(est_path$N[,,j],p=p,q=q, cc="and",dd="and", neg=TRUE)
diag(est[[1]])<-1
diag(est[[4]])<-1
cc<-sum(sign(est[[1]])!=sign(gr[[1]]))==0
cd<-sum(sign(est[[2]])!=sign(gr[[2]]))==0
dc<-sum(sign(est[[3]])!=sign(gr[[2]]))==0
dd<-sum(sign(est[[4]])!=sign(gr[[3]]))==0
success.all[j, iter,1]<-cc
success.all[j, iter,2]<-cd
success.all[j, iter,3]<-dc
success.all[j, iter,4]<-dd
}
for(j in 1: total){
est<-combine.type(est_path$N[,,j],p=p,q=q, cc="and",dd="and", neg=TRUE)
diag(est[[1]])<-1
diag(est[[4]])<-1
cc<-sum(sign(est[[1]])!=sign(B))==0
cd<-sum(sign(est[[2]])!=sign(P))==0
dc<-sum(sign(est[[3]])!=sign(P))==0
dd<-sum(sign(est[[4]])!=sign(Phi))==0
success.all[j, iter,1]<-cc
success.all[j, iter,2]<-cd
success.all[j, iter,3]<-dc
success.all[j, iter,4]<-dd
}
source("../Sources/mixedgraphcodes.r")
source("../Sources/BIC.r")
B<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix B.csv",sep=""),header=F))
P<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix P.csv",sep=""),header=F))
Phi<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix Phi.csv",sep=""),header=F))
p<-dim(P)[1]
q<-dim(P)[2]
total<-50
lambdas<-exp(-seq(from= 2, to= -2, length.out=total))
M2<-5
samplesize<-seq(from=200, to=6000, by=200)
nsize<-length(samplesize)
source("../Sources/mixedgraphcodes.r")
source("../Sources/BIC.r")
### The first simulation: testing whether the theoretical result is correct.
B<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix B.csv",sep=""),header=F))
P<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix P.csv",sep=""),header=F))
Phi<-as.matrix(read.csv(file=paste("./Graph/graphGB", "60Fix Phi.csv",sep=""),header=F))
###
p<-dim(P)[1]
q<-dim(P)[2]
total<-50
lambdas<-exp(-seq(from= 2, to= -2, length.out=total))
M2<-5
samplesize<-seq(from=200, to=6000, by=200)
nsize<-length(samplesize)
### Number of replicates
truth<-huge(gr)
success.all<-replicate(4,matrix(0,total,M2))
all.rate<-replicate(4,matrix(0,total,nsize))
time.start<-proc.time()
for(size in 1:nsize){
count<-0
for(iter in 1:M2){
sample_limited<-as.matrix(read.table(file=paste("./Data/sample60", "N10000",iter, ".txt",sep="" )))
sample_limited<-sample_limited[1:samplesize[size],]
if( is.same(sample_limited[,p+(1:q) ])==T){ success.all[iter,]<-0
}else{
count<-count+1
sds<-as.numeric(apply(sample_limited, 2, sd))
est_path<-neighbour.value(dat=sample_limited,p=p,q=q,
clambda.g=lambdas,ratio=1, pf=T, pw=sds,cf=F)
for(j in 1: total){
est<-combine.type(est_path$N[,,j],p=p,q=q, cc="and",dd="and", neg=TRUE)
diag(est[[1]])<-1
diag(est[[4]])<-1
cc<-sum(sign(est[[1]])!=sign(B))==0
cd<-sum(sign(est[[2]])!=sign(P))==0
dc<-sum(sign(est[[3]])!=sign(P))==0
dd<-sum(sign(est[[4]])!=sign(Phi))==0
success.all[j, iter,1]<-cc
success.all[j, iter,2]<-cd
success.all[j, iter,3]<-dc
success.all[j, iter,4]<-dd
}
}
}
for(k in 1:4){
for(j in 1:total){
all.rate[j, size,k]<-mean(success.all[j,,k])*M2/count
}
}
}
B<-as.matrix(read.csv(file=paste("./Graph/graphGB", "120Fix B.csv",sep=""),header=F))
P<-as.matrix(read.csv(file=paste("./Graph/graphGB", "120Fix P.csv",sep=""),header=F))
Phi<-as.matrix(read.csv(file=paste("./Graph/graphGB", "120Fix Phi.csv",sep=""),header=F))
prob30<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cc.txt",sep="")))
prob60<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cc.txt",sep="")))
samplesize.new<-seq(from=200, to=6000, by=200)
pdf(file = "./Plots/14-new-prob-cc.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob30[14,]~ I(samplesize.new/log(60)/3), type="b",main=" ",xlab=" ", cex.main=2,
cex.lab=1.5,cex.axis=1.5, ylab=" ",
lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob60[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob120[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(a) Gaussian-Gaussian', outer=T, line=-2,cex=2.3)
dev.off()
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b",main=" ",xlab=" ", cex.main=2,
cex.lab=1.5,cex.axis=1.5, ylab=" ",
lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cc.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cc.txt",sep="")))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b",main=" ",xlab=" ", cex.main=2,
cex.lab=1.5,cex.axis=1.5, ylab=" ",
lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cd.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cd.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cd.txt",sep="")))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab=" ",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5, ylab=" ", lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cd.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cd.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cd.txt",sep="")))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab=" ",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5, ylab=" ", lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60dc.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120dc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240dc.txt",sep="")))
pdf(file = "./Plots/14-new-prob-dc.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab=" ",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5,ylab=" ", lwd=2,xlim=c(100,400),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(c) Binary-Gaussian', outer=T, line=-2,cex=2.3)
dev.off()
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cc.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cc.txt",sep="")))
samplesize.new<-seq(from=200, to=6000, by=200)
pdf(file = "./Plots/prob-cc.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b",main=" ",xlab=" ", cex.main=2,
cex.lab=1.5,cex.axis=1.5, ylab=" ",
lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(a) Gaussian-Gaussian', outer=T, line=-2,cex=2.3)
dev.off()
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cd.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cd.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cd.txt",sep="")))
pdf(file = "./Plots/prob-cd.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab=" ",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5, ylab=" ", lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(b) Gaussian-Binary', outer=T, line=-2,cex=2.3)
dev.off()
##############################
## discrete - continuous #####
##############################
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60dc.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120dc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240dc.txt",sep="")))
pdf(file = "./Plots/prob-dc.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab=" ",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5,ylab=" ", lwd=2,xlim=c(100,400),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(c) Binary-Gaussian', outer=T, line=-2,cex=2.3)
dev.off()
##############################
##   discrete - discrete #####
##############################
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60dd.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120dd.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240dd.txt",sep="")))
pdf(file = "./Plots/prob-dd.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab="",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5,ylab=" ", lwd=2,xlim=c(100,400),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(d) Binary-Binary', outer=T, line=-2,cex=2.3)
dev.off()
source("../Sources/MGM_Graph.r")
##########################################
#### Fixed graphs
q<-p<-30
set.seed(12)
gr<-generator(p=p, q=q,lwb=0.3, upb=0.3)
write.table(gr[[1]],file=paste("./Graph/graphGB", "30Fix B.csv",sep=""),row.names=F,col.names=F,sep=",")
write.table(gr[[2]],file=paste("./Graph/graphGB", "30Fix P.csv",sep=""),row.names=F,col.names=F,sep=",")
write.table(gr[[3]],file=paste("./Graph/graphGB", "30Fix Phi.csv",sep=""),row.names=F,col.names=F,sep=",")
q<-p<-60
set.seed(12)
gr<-generator(p=p, q=q, lwb=0.3, upb=0.3)
write.table(gr[[1]],file=paste("./Graph/graphGB", "60Fix B.csv",sep=""),row.names=F,col.names=F,sep=",")
write.table(gr[[2]],file=paste("./Graph/graphGB", "60Fix P.csv",sep=""),row.names=F,col.names=F,sep=",")
write.table(gr[[3]],file=paste("./Graph/graphGB", "60Fix Phi.csv",sep=""),row.names=F,col.names=F,sep=",")
q<-p<-120
set.seed(12)
gr<-generator(p=p, q=q, lwb=0.3, upb=0.3)
write.table(gr[[1]],file=paste("./Graph/graphGB", "120Fix B.csv",sep=""),row.names=F,col.names=F,sep=",")
write.table(gr[[2]],file=paste("./Graph/graphGB", "120Fix P.csv",sep=""),row.names=F,col.names=F,sep=",")
write.table(gr[[3]],file=paste("./Graph/graphGB", "120Fix Phi.csv",sep=""),row.names=F,col.names=F,sep=",")
source("../Sources/MGM_Sampler.r")
M2<-10 # Number of datasets for each graph
B<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix B.csv",sep=""),header=F))
P<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix P.csv",sep=""),header=F))
Phi<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix Phi.csv",sep=""),header=F))
for(iter in 1:M2){
set.seed(19+23*iter)
rs<-sampler(10000, B=B, P=P, Phi=Phi, seedmultiplier=(19+23*iter),
Gibbs.n=500,burnin=3000)
write.table(rs,file=paste("sample30", "N10000", iter, ".txt",sep=""))
}
source("../Sources/MGM_Evaluation.r")
source("../Sources/MGM_Combine.r")
source("../Sources/MGM_BIC.r")
source("../Sources/MGM_NSelect.r")
source("../Sources/MGM_misc.r")
B<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix B.csv",sep=""),header=F))
P<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix P.csv",sep=""),header=F))
Phi<-as.matrix(read.csv(file=paste("./Graph/graphGB", "30Fix Phi.csv",sep=""),header=F))
p<-dim(P)[1]
q<-dim(P)[2]
total<-50
lambdas<-exp(-seq(from= 2, to= -2, length.out=total))
M2<-5
samplesize<-seq(from=200, to=6000, by=200)
nsize<-length(samplesize)
truth<-huge(gr)
success.all<-replicate(4,matrix(0,total,M2))
all.rate<-replicate(4,matrix(0,total,nsize))
time.start<-proc.time()
truth<-huge(gr)
success.all<-replicate(4,matrix(0,total,M2))
all.rate<-replicate(4,matrix(0,total,nsize))
for(size in 1:nsize){
count<-0
for(iter in 1:M2){
sample_limited<-as.matrix(read.table(file=paste("./Data/sample30", "N10000",iter, ".txt",sep="" )))
sample_limited<-sample_limited[1:samplesize[size],]
if( is_same(sample_limited[,p+(1:q) ])==T){ success.all[iter,]<-0
}else{
count<-count+1
sds<-as.numeric(apply(sample_limited, 2, sd))
est_path<-neighbour(dat=sample_limited,p=p,q=q,
clambda=lambdas,ratio=1, pf=T, pw=sds)
for(j in 1: total){
est<-combine_type(est_path$N[,,j],p=p,q=q, cc="and",dd="and", neg=TRUE)
diag(est[[1]])<-1
diag(est[[4]])<-1
cc<-sum(sign(est[[1]])!=sign(B))==0
cd<-sum(sign(est[[2]])!=sign(P))==0
dc<-sum(sign(est[[3]])!=sign(P))==0
dd<-sum(sign(est[[4]])!=sign(Phi))==0
success.all[j, iter,1]<-cc
success.all[j, iter,2]<-cd
success.all[j, iter,3]<-dc
success.all[j, iter,4]<-dd
}
}
}
for(k in 1:4){
for(j in 1:total){
all.rate[j, size,k]<-mean(success.all[j,,k])*M2/count
}
}
}
iter
size
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cc.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cc.txt",sep="")))
samplesize.new<-seq(from=200, to=6000, by=200)
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b",main=" ",xlab=" ", cex.main=2,
cex.lab=1.5,cex.axis=1.5, ylab=" ",
lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cc.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cc.txt",sep="")))
samplesize.new<-seq(from=200, to=6000, by=200)
pdf(file = "./Plots/prob-cc.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b",main=" ",xlab=" ", cex.main=2,
cex.lab=1.5,cex.axis=1.5, ylab=" ",
lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(a) Gaussian-Gaussian', outer=T, line=-2,cex=2.3)
dev.off()
##############################
## continuous- discrete  #####
##############################
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60cd.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120cd.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240cd.txt",sep="")))
pdf(file = "./Plots/prob-cd.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab=" ",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5, ylab=" ", lwd=2,xlim=c(0,100),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(b) Gaussian-Binary', outer=T, line=-2,cex=2.3)
dev.off()
##############################
## discrete - continuous #####
##############################
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60dc.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120dc.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240dc.txt",sep="")))
pdf(file = "./Plots/prob-dc.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab=" ",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5,ylab=" ", lwd=2,xlim=c(100,400),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(c) Binary-Gaussian', outer=T, line=-2,cex=2.3)
dev.off()
##############################
##   discrete - discrete #####
##############################
prob60<-as.matrix(read.table(file=paste("./Estimates/60/","prob60dd.txt",sep="")))
prob120<-as.matrix(read.table(file=paste("./Estimates/120/","prob120dd.txt",sep="")))
prob240<-as.matrix(read.table(file=paste("./Estimates/240/","prob240dd.txt",sep="")))
pdf(file = "./Plots/prob-dd.pdf", width=4.5, height=4)
par(mar=c(2,2.2,2.5,2))
plot(prob60[14,]~ I(samplesize.new/log(60)/3), type="b", xlab="",
main=" ",cex.main=1.7,
cex.lab=1.5,cex.axis=1.5,ylab=" ", lwd=2,xlim=c(100,400),ylim=c(0,1))
lines(prob120[14,]~ I(samplesize.new/log(120)/3), type="b",lwd=2, col="green")
lines(prob240[14,]~ I(samplesize.new/log(240)/3), type="b",lwd=2, col="blue")
mtext('(d) Binary-Binary', outer=T, line=-2,cex=2.3)
dev.off()
library(glmnet)
M2<-10 # Number of datasets for each graph
source("../Sources/MGM_Graph.r")
source("./probability_Graph.r")
library(glmnet)
M2<-10 # Number of datasets for each graph
source("../Sources/MGM_Graph.r")
source("./probability_Graph.r")
P_Graph(lwb=0.3,upb=0.3);
source("../Sources/MGM_Sampler.r")
source("./probability_Data.r")
P_Data(M2=M2);
source("../Sources/MGM_Evaluation.r")
source("../Sources/MGM_Combine.r")
source("../Sources/MGM_BIC.r")
source("../Sources/MGM_NSelect.r")
source("../Sources/MGM_misc.r")
source("./probability_30.r")
source("./probability_60.r")
source("../Sources/MGM_Evaluation.r")
source("../Sources/MGM_Combine.r")
source("../Sources/MGM_BIC.r")
source("../Sources/MGM_NSelect.r")
source("../Sources/MGM_misc.r")
source("./probability_30.r")
source("./probability_30.r")
source("./probability_60.r")
source("./probability_60.r")
source("./probability_30.r")
source("./probability_120.r")
P_Graph(lwb=0.3,upb=0.3);
source("./probability_120.r")
P_Graph(lwb=0.3,upb=0.3);
source("./probability_Graph.r")
P_Graph(lwb=0.3,upb=0.3);
source("./probability_120.r")
source("./probability_120.r")
